extend ../layout

block content
	//- Provide the `event` item
	include ../includes/success
	
	include ./nav

	-const registrations = event.registrations;
	
	if user
		if !hasRegistered && user.role === roles.user
			.mt-3.mb-2
				//- Button trigger modal
				button.btn.btn-sm.btn-outline-secondary(
					type='button' data-bs-toggle='modal' 
					data-bs-target='#event-register'
				)
					| Register for Event

				//- Modal
				#event-register.modal.fade(
					tabindex='-1' aria-labelledby='event-register'
				)
					.modal-dialog.modal-sm
						.modal-content
							.modal-header
								h5.modal-title.h5 Register for #{event.name}
								button.btn.btn-close(
									type='button' data-bs-dismiss='modal' 
									aria-label='Close'
								)
							.modal-body
								form#event-register-form
									input#event_id(
										type="hidden", name="event_id"
										value=event._id
									)
									.mb-3
										label.form-label(for='student_id')
											| Student Id
										.alert.register-alert.d-none(role='alert')
											|
										input#student_id.form-control(
											type='text' min='1' name='student_id'
										)
									button.btn.btn-primary.mt-3.px-3(type='submit')
										span.register-loading.d-none
											.spinner-border.spinner-border-sm(
											role='status' aria-hidden='true'
										)
										span.ms-2 Register
		else if hasRegistered
			.mt-4.mb-2
				span.p-2.bg-primary.text-white.rounded
					|You have registered for this event

				form(
					action=pages.events.item(event._id).cancelRegistration, 
					method="post"
					class="mt-3"
					id="event-cancel-form"
				)
					input#student_id(
						type="hidden", name="student_id"
						value=registerRecord ? registerRecord.student._id: null
					)
					button.btn.btn-sm.btn-danger(type="submit") 
						|Cancel Registration

	.row.m-0.mt-3
		.col-md-7.shadow.mb-3.rounded-3
			img.mb-3.py-2.img-fluid(src=event.logo.path alt=event.name)
			h5= event.name
			p.text-muted
				strong Event starts on: 
				span #{new Date(event.start_date).toDateString()}
				br
				strong Time: 
				span #{event.start_time}
				br
				if event.end_date
					strong Event ends on: 
					span #{new Date(event.end_date).toDateString()}
					br
					strong End Time: 
					span #{event.end_time}
					br
				strong Venue: 
				span.badge.bg-secondary #{event.location}
				br
				strong Type: 
				span= event.type
				br

		.col-md-4.ms-2
			p.fw-bold.text-muted Event Description
			.bg-light.rounded-3.py-2.my-3
				textarea.form-control(rows='6' readonly='readonly')
					|#{event.description}

			p.fw-bold.text-muted Event QRCode
			.mt-2.mb-4
				//- Button trigger modal
				button.btn.btn-sm.btn-outline-secondary(
					type='button' data-bs-toggle='modal' 
					data-bs-target='#event-qr-code'
				)
					| Show QRCode
				#event-qr-code.modal.fade(
					tabindex='-1' aria-labelledby='event-qr-code'
				)
					.modal-dialog.modal-sm
						.modal-content
							.modal-header
								h5.modal-title.h5 QRCode for #{event.name}
								button.btn.btn-close(
									type='button' data-bs-dismiss='modal'
									 aria-label='Close'
								)
							.modal-body.p-0.text-center
								p.text-muted 
									|Scan this code to register for this event using 
									|your student id
								img(src=event.qrCode, alt=event.name)
			p.fw-bold.text-muted Event Links
			.mb-3
				input.form-control(
					type='text' readonly='readonly' 
					value=app.domain + pages.events.item(event._id).show
				)
